#include <string>
#include <vector>
#include <queue>

using namespace std;

int solution(int n, vector<vector<int>> edge) {
    int max = 0;
    int answer = 0;
    bool visited[1000000] = { false };
    queue<pair<int, int>> road;

    road.push({1, 0});
    visited[1] = true;
    while (!road.empty())
    {
        for (int i = 0; i < edge.size(); i++)
        {
            if (edge[i][0] == road.front().first && !visited[edge[i][1]]) {
                visited[edge[i][1]] = true;
                road.push({ edge[i][1], road.front().second + 1 });
                if (max < road.front().second + 1) {
                    max = road.front().second + 1;
                    answer = 1;
                }
                else if (max == road.front().second + 1)
                    answer++;
            }
            if (edge[i][1] == road.front().first && !visited[edge[i][0]]) {
                visited[edge[i][0]] = true;
                road.push({ edge[i][0], road.front().second + 1 });
                if (max < road.front().second+1){
                    max = road.front().second + 1;
                    answer = 1;
                }
                else if (max == road.front().second + 1)
                    answer++;
            }
        }
        road.pop();
    }
    return answer;
}

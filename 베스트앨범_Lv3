#include <string>
#include <vector>
#include <queue>
#include <map>

using namespace std;

struct Compare {
    bool operator()(pair<int, int>a, pair<int, int>b) {
        if (a.first == b.first)
            return a.second > b.second;

        return a.first < b.first;
    }
};


vector<int> solution(vector<string> genres, vector<int> plays) {
    vector<int> answer;
    map<string, int> theMap;
    map<string, map<int, int>> listMap;

    for (int i = 0; i < genres.size(); i++)
    {
        theMap[genres[i]] += plays[i];
        listMap[genres[i]][i] = plays[i];
    }

    while (!theMap.empty()) {
        string name;
        int play = 0;

        for (auto it: theMap)
        {
            if (play < it.second) {
                name = it.first;
                play = it.second;
            }
        }

        priority_queue<pair<int, int>, vector<pair<int, int>>, Compare> temp;
        for (int i = 0; i < plays.size(); i++)
        {
            if (genres[i] == name)
                temp.push({ plays[i], i });
        }

        for (int i = 0; i < 2 && !temp.empty(); i++)
        {
            answer.push_back(temp.top().second);
            temp.pop();
        }

        theMap.erase(name);
    }

    return answer;
}

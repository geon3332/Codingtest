#include <iostream>
#include <string>
#include <vector>
#include <queue>

using namespace std;

int solution(int x, int y, int n) {
    int answer = 0;

    if (x == y)
        return 0;
    queue<pair<int, int>> tree;
    tree.push({y, 0});
    while (!tree.empty()) {
        auto value = tree.front();
        if (value.first - n >= x) {
            if (value.first - n == x) {
                answer = value.second+1;
                break;
            }
            tree.push({ value.first - n, value.second + 1 });
        }
        if (value.first % 2 == 0 && value.first / 2 >= x) {
            if (value.first / 2 == x) {
                answer = value.second+1;
                break;
            }
            tree.push({ value.first / 2, value.second + 1 });
        }
        if (value.first % 3 == 0 && value.first / 3 >= x) {
            if (value.first / 3 == x) {
                answer = value.second+1;
                break;
            }
            tree.push({ value.first / 3, value.second + 1 });
        }

        tree.pop();
    }

    if(!tree.empty())
        return answer;
    else
        return -1;
}

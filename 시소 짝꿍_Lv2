#include <string>
#include <vector>
#include <map>

using namespace std;

long long solution(vector<int> weights) {
    long long answer = 0;
    map<int, int> theMaps;

    for (auto w : weights) {
        theMaps[w]++;
    }

    while (theMaps.size() > 0) {
        int key = theMaps.begin()->first;
        theMaps[key]--;

        if (theMaps[key] == 0)
            theMaps.erase(key);
        else
            answer += theMaps[key];

        if (theMaps.find(key * 2) != theMaps.end())
            answer += theMaps[key * 2];

        if ((key * 3) % 2 == 0)
            if (theMaps.find((key * 3) / 2) != theMaps.end())
                answer += theMaps[(key * 3) / 2];

        if ((key * 4) % 3 == 0)
            if (theMaps.find((key * 4) / 3) != theMaps.end())
                answer += theMaps[(key * 4) / 3];
    }

    return answer;
}

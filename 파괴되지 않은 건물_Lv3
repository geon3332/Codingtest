#include <string>
#include <vector>

using namespace std;

int addValues[1010][1010];

int solution(vector<vector<int>> board, vector<vector<int>> skill) {
    int answer = 0;

    for (int i = 0; i < skill.size(); i++)
    {
        int startX = skill[i][1];
        int startY = skill[i][2];
        int endX = skill[i][3];
        int endY = skill[i][4];
        int damage = skill[i][5];
        damage = skill[i][0] == 1 ? damage * -1 : damage;

        addValues[startX][startY] += damage;
        addValues[endX+1][endY+1] += damage;
        addValues[startX][endY+1] -= damage;
        addValues[endX+1][startY] -= damage;
    }

    for (int i = 0; i <= board.size(); i++) {
        for (int j = 0; j < board[0].size(); j++) {
            addValues[i][j + 1] += addValues[i][j];
            if (addValues[i][j] + addValues[i][j] > 0) {
                i = i;
            }
        }
    }

    for (int j = 0; j <= board[0].size(); j++) {
        for (int i = 0; i < board.size(); i++) {
            addValues[i + 1][j] += addValues[i][j];
            if (addValues[i][j] + addValues[i][j] > 0) {
                i = i;
            }
        }
    }

    for (int i = 0; i < board.size(); i++) {
        for (int j = 0; j < board[i].size(); j++) {
            if (board[i][j] + addValues[i][j] > 0) {
                answer++;
            }
        }
    }

    return answer;
}
